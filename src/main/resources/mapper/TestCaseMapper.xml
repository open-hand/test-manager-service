<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.test.manager.infra.mapper.TestCaseMapper">

    <resultMap type="io.choerodon.test.manager.api.vo.ExcelCaseVO" id="BaseResultMap">
        <id column="folderName" property="folderName"/>
        <id column="project_code" property="projectCode"/>
        <id column="case_id" property="caseId"/>
        <id column="case_num" property="caseNum"/>
        <id column="summary" property="summary"/>
        <id column="description" property="description"/>
        <id column="last_updated_by" property="lastUpdatedBy"/>
        <id column="created_by" property="createdBy"/>
        <id column="priority_name" property="priorityName"/>
        <id column="custom_num" property="customNum"/>
        <id column="folder_id" property="folderId"/>
        <collection property="caseSteps"
                    ofType="io.choerodon.test.manager.api.vo.TestCaseStepVO">
            <id column="step_id" property="stepId"/>
            <id column="test_step" property="testStep"/>
            <id column="test_data" property="testData"/>
            <id column="expected_result" property="expectedResult"/>
        </collection>
        <collection property="releatedIssueIds" autoMapping="true" ofType="java.lang.Long">
            <id column="issue_id"/>
        </collection>
    </resultMap>
    <select id="listCaseByFolderIds" resultType="io.choerodon.test.manager.infra.dto.TestCaseDTO">
        SELECT
        tci.case_id,
        tci.summary,
        tci.folder_id,
        tci.project_id,
        tci.case_num,
        tci.created_by,
        tci.last_updated_by,
        tci.creation_date,
        tci.last_update_date,
        tci.object_version_number,
        tci.custom_num
        FROM
        (
        SELECT
        tc.case_id,
        tc.summary,
        tc.folder_id,
        tc.project_id,
        CONCAT_WS( '-', tpi.project_code, tc.case_num ) as case_num,
        tc.created_by,
        tc.last_updated_by,
        tc.creation_date,
        tc.last_update_date,
        tc.object_version_number,
        tc.custom_num
        FROM
        test_case tc
        left join test_project_info tpi on tpi.project_id = tc.project_id
        WHERE
        tc.project_id = #{projectId}
        AND
        tc.folder_id IN
        <foreach collection="folderIds" item="folderId" open="(" separator="," close=")">
            #{folderId}
        </foreach>
        ) as tci
        WHERE
            <include refid="sqlParam"/>
            order by tci.last_update_date DESC
    </select>

    <select id="listCopyCase" resultType="io.choerodon.test.manager.infra.dto.TestCaseDTO">
        SELECT
        case_id,
        summary,
        description,
        rank,
        folder_id,
        project_id,
        custom_num,
        priority_id
        FROM
        test_case
        WHERE
        project_id = #{projectId}
        AND
        case_id IN
        <foreach collection="caseIds" item="caseId" open="(" separator="," close=")">
            #{caseId}
        </foreach>
    </select>

    <sql id="sqlParam">
        <if test="searchDTO != null">
            <if test="searchDTO.contents != null and searchDTO.contents.size > 0 ">
                AND
                <foreach collection="searchDTO.contents" item="content" open="(" separator=" OR " close=")">
                    (tci.summary LIKE CONCAT(CONCAT('%', #{content, jdbcType=VARCHAR}),'%'))
                    or
                    (tci.case_num LIKE CONCAT(CONCAT('%', #{content, jdbcType=VARCHAR}),'%'))
                </foreach>
            </if>
            <if test="searchDTO.searchArgs != null">
                <if test='searchDTO.searchArgs.summary != null'>
                    AND (tci.summary LIKE CONCAT(CONCAT('%', #{searchDTO.searchArgs.summary, jdbcType=VARCHAR}),'%'))
                </if>
                <if test="searchDTO.searchArgs.caseNum != null">
                    AND (tci.case_num LIKE CONCAT(CONCAT('%', #{searchDTO.searchArgs.caseNum, jdbcType=VARCHAR}),'%'))
                </if>
                <if test="searchDTO.searchArgs.customNum != null">
                    AND (tci.custom_num LIKE CONCAT(CONCAT('%', #{searchDTO.searchArgs.customNum, jdbcType=VARCHAR}),'%'))
                </if>
            </if>
        </if>
    </sql>

    <insert id="batchInsertTestCase" parameterType="io.choerodon.test.manager.api.vo.TestCaseMigrateDTO">
        insert into test_case (case_id, case_num, summary, description, rank, folder_id, version_num, project_id,
        object_version_number, created_by, creation_date, last_updated_by, last_update_date)
        values (#{caseId}, #{caseNum}, #{summary}, #{description}, #{rank}, #{folderId}, 1, #{projectId},
        #{objectVersionNumber}, #{createdBy}, #{creationDate}, #{lastUpdatedBy}, #{lastUpdateDate});
    </insert>

    <select id="listIssueIds" resultType="long">
        select case_id from test_case
    </select>

    <update id="updateTestCaseFolder">
        update test_case tc
        set tc.folder_id = (select tifr.folder_id
                            from test_issue_folder_rel tifr
                            where tc.case_id = tifr.issue_id)
    </update>
    <select id="queryFolderId" resultType="Long">
       SELECT DISTINCT
	    folder_id
        FROM
            `test_case`
        WHERE
            project_id = #{projectId}
        AND folder_id IS NOT NULL;
    </select>

    <select id="listCaseIds" resultType="long">
        SELECT
        tci.case_id
        FROM
        (
        SELECT
        tc.case_id,
        tc.summary,
        tc.folder_id,
        tc.project_id,
        CONCAT_WS( '-', tpi.project_code, tc.case_num ) as case_num,
        tc.created_by,
        tc.last_updated_by,
        tc.creation_date,
        tc.last_update_date,
        tc.object_version_number,
        tc.custom_num
        FROM
        test_case tc
        right join test_project_info tpi on tpi.project_id = tc.project_id
        WHERE
        tc.project_id = #{projectId}
        AND
        tc.folder_id IN
        <foreach collection="folderIds" item="folderId" open="(" separator="," close=")">
            #{folderId}
        </foreach>
        ) as tci
        <where>
            <include refid="sqlParam"/>
        </where>
        order by tci.last_update_date DESC
    </select>
   <select id="listByCaseIds" resultType="io.choerodon.test.manager.infra.dto.TestCaseDTO">
       SELECT
       *
       FROM
       test_case
       WHERE
       project_id = #{projectId}
       <if test="caseIds != null and caseIds.size > 0">
           AND
           case_id IN
           <foreach collection="caseIds" item="caseId" open="(" separator="," close=")">
               #{caseId}
           </foreach>
       </if>
       <if test="isDesc">
           order by case_id DESC
       </if>
   </select>

    <select id="excelCaseList" resultMap="BaseResultMap">
        SELECT
        tpi.project_code,
        tif.`name` folderName,
        tp.name AS priority_name,
        tcl.issue_id,
        ts.*,tcs.*
        FROM
        test_case ts
        LEFT JOIN test_priority tp ON ts.priority_id = tp.id
        LEFT JOIN test_issue_folder tif ON tif.folder_id = ts.folder_id
        LEFT JOIN test_case_step tcs on tcs.issue_id =ts.case_id
        LEFT JOIN test_case_link tcl on ts.case_id = tcl.link_case_id and tcl.project_id = ts.project_id
        LEFT JOIN test_project_info tpi on ts.project_id=tpi.project_id
        <if test="caseIds!=null and caseIds.size>0">
            WHERE
            ts.case_id IN
            <foreach collection="caseIds" item="caseId" open="(" separator="," close=")">
                #{caseId}
            </foreach>
        </if>

    </select>
    <select id="listByProject" resultType="io.choerodon.test.manager.infra.dto.TestCaseDTO">
          SELECT
	            tc.*
            FROM
	        test_case tc
	        LEFT JOIN test_issue_folder tif ON tif.folder_id = tc.folder_id
            WHERE
	        tif.project_id = #{projectId} and tc.folder_id is not null
    </select>

    <resultMap id="testCaseMap" type="io.choerodon.test.manager.api.vo.CaseCompareVO">
        <result  column="case_id" property="caseId"/>
        <association property="testCase" javaType="io.choerodon.test.manager.api.vo.TestCaseVO">
            <id column="case_id" property="caseId"/>
            <result  column="summary" property="summary"/>
            <result  column="description" property="description"/>
            <result  column="priority_id" property="priorityId"/>
            <result  column="custom_num" property="customNum"/>
        </association>
        <collection  property="caseStep" ofType="io.choerodon.test.manager.infra.dto.TestCaseStepDTO">
            <id column="step_id" property="stepId"/>
            <result column="test_step" property="testStep"/>
            <result column="test_data" property="testData"/>
            <result column="expected_result" property="expectedResult"/>
            <result column="rank" property="rank"/>
        </collection>
        <collection property="caseAttach" ofType="io.choerodon.test.manager.infra.dto.TestCaseAttachmentDTO">
            <id column="attachment_id" property="attachmentId"/>
            <result column="url" property="url"/>
            <result column="file_name" property="fileName"/>
        </collection>
    </resultMap>

    <select id="queryTestCaseMap" resultMap="testCaseMap">
        SELECT
        tc.case_id as case_id,
        tc.summary as summary,
        tc.priority_id as priority_id,
        tc.description as description,
        tc.custom_num as custom_num,
        cs.step_id as step_id,
        cs.test_step as test_step,
        cs.test_data as test_data,
        cs.rank as rank,
        cs.expected_result as expected_result,
        tca.file_name,
        tca.url
        FROM
        test_case tc
        left join test_case_step cs on cs.issue_id = tc.case_id
        left join test_case_attachment  tca on tca.case_id =  tc.case_id
        left join test_cycle_case tcase on tcase.case_id = tc.case_id
     where tc.case_id in
     <foreach collection="list" item="caseId" open="(" close=")" separator=",">
         #{caseId}
     </foreach>
     and
        tcase.execute_id  in
        <foreach collection="executedIds" item="executedId" open="(" close=")" separator=",">
            #{executedId}
        </foreach>
    ORDER BY tc.case_id
    </select>

    <update id="updateAuditFields">
        update test_case
        set created_by = #{userId}, creation_date = #{date}, last_updated_by = #{userId}, last_update_date = #{date}
        where
        project_id = #{projectId}
        and
        case_id IN
        <foreach item="item" index="index" collection="caseIds"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
    <update id="batchUpdateCasePriority">
        update test_case
        set priority_id = #{changePriorityId},last_updated_by = #{userId}
        where priority_id = #{priorityId}
        AND project_id IN
        <foreach collection="projectIds" item="index" open="(" separator="," close=")">
            #{index}
        </foreach>
    </update>
    <update id="updatePriorityByProject">
        UPDATE test_case
        SET priority_id = #{priorityId}
        WHERE priority_id = 0
        and project_id IN
        <foreach collection="projectIds" item="index" open="(" separator="," close=")">
            #{index}
        </foreach>
    </update>

    <select id="listUnSelectCaseId" resultType="long">
       select case_id from test_case
       <where>
           project_id = #{projectId}
           and
           folder_id in
           <foreach collection="folderIds" item="folderId" separator="," open="(" close=")">
            #{folderId}
           </foreach>
           and case_id not in
           <foreach collection="caseIds" item="caseId" separator="," open="(" close=")">
               #{caseId}
           </foreach>
       </where>
    </select>

    <select id="countByProjectIdAndCaseIds" resultType="int">
        select count(*) from test_case
        <where>
            project_id = #{projectId}
           <if test="caseIds != null and caseIds.size > 0">
               and
               case_id  in
               <foreach collection="caseIds" item="caseId" separator="," open="(" close=")">
                   #{caseId}
               </foreach>
           </if>
        </where>
    </select>

    <select id="listCase" resultType="io.choerodon.test.manager.infra.dto.TestCaseDTO">
        SELECT
            tci.case_id,
            tci.summary,
            tci.folder_id,
            tci.project_id,
            tci.case_num,
            tci.priority_id,
            tci.priority_name,
            tci.priority_colour,
            tci.sequence,
            tci.created_by,
            tci.last_updated_by,
            tci.creation_date,
            tci.last_update_date,
            tci.object_version_number,
            tci.custom_num
        FROM
        (
            SELECT
                tc.case_id,
                tc.summary,
                tc.folder_id,
                tc.project_id,
                CONCAT_WS( '-', tpi.project_code, tc.case_num ) AS case_num,
                tc.priority_id,
                tp.name AS priority_name,
                tp.colour AS priority_colour,
                tp.sequence,
                tc.created_by,
                tc.last_updated_by,
                tc.creation_date,
                tc.last_update_date,
                tc.object_version_number,
                tc.custom_num
            FROM
                test_case tc
            JOIN test_project_info tpi on tpi.project_id = tc.project_id
            JOIN test_priority tp ON tc.priority_id = tp.id
            WHERE
                tc.project_id = #{projectId}
            AND tc.folder_id IN
            <foreach collection="folderIds" item="folderId" open="(" separator="," close=")">
                #{folderId}
            </foreach>
        ) as tci
        <where>
            <include refid="sqlParam"/>
            <if test="searchDTO != null and searchDTO.searchArgs != null and searchDTO.searchArgs.priorityId != null">
                AND tci.priority_id = #{searchDTO.searchArgs.priorityId}
            </if>
        </where>
    </select>
    <select id="checkPriorityDelete" resultType="java.lang.Long">
        select count(tc.case_id)
        from test_case tc
        where tc.priority_id = #{priorityId}
        AND tc.project_id IN
        <foreach collection="projectIds" item="index" open="(" separator="," close=")">
            #{index}
        </foreach>
    </select>
    <select id="selectALLProjectId" resultType="java.lang.Long">
        SELECT project_id FROM test_case GROUP BY project_id
    </select>

    <delete id="batchDeleteCases">
        delete from test_case where project_id=#{projectId}
        <if test="caseIds != null and caseIds.size > 0">
            and
            case_id in
            <foreach collection="caseIds" item="caseId" separator="," open="(" close=")">
                #{caseId}
            </foreach>
        </if>
    </delete>

    <select id="queryCaseByContent" resultType="io.choerodon.test.manager.api.vo.TestCaseVO">
        SELECT search.* FROM (
            SELECT
            tc.case_id,
            tc.summary,
            tc.project_id,
            CONCAT_WS( '-', tpi.project_code, tc.case_num ) AS case_num,
            tc.priority_id,
            tp.name AS priority_name,
            tp.colour AS priority_colour,
            tp.sequence
            FROM test_case tc
            LEFT JOIN test_project_info tpi ON tpi.project_id = tc.project_id
            LEFT JOIN test_priority tp ON tc.priority_id = tp.id
            WHERE tc.project_id=#{projectId}
            AND tc.case_id NOT IN (
                SELECT tcl.link_case_id
                FROM test_case_link tcl
                WHERE tcl.project_id = #{projectId}
                AND tcl.issue_id = #{issueId}
            )
        ) search
        WHERE 1=1
        <if test="content != null">
            AND (search.case_num LIKE CONCAT(CONCAT('%', #{content}), '%') OR search.summary LIKE CONCAT(CONCAT('%',#{content}), '%'))
        </if>
    </select>

    <select id="listByLinkCaseIds" resultType="io.choerodon.test.manager.api.vo.TestCaseLinkVO">
        SELECT
            tc.case_id,
            tc.summary,
            tc.project_id,
            tc.folder_id,
            CONCAT_WS( '-', tpi.project_code, tc.case_num ) AS case_num,
            tc.priority_id,
            tp.name AS priority_name,
            tp.colour AS priority_colour,
            tp.sequence
        FROM
            test_case tc
        JOIN test_project_info tpi ON tpi.project_id = tc.project_id
        JOIN test_priority tp ON tc.priority_id = tp.id
        WHERE
            tc.project_id = #{projectId}
            AND tc.case_id IN
            <foreach collection="linkCaseIds" item="linkCaseId" open="(" separator="," close=")">
                #{linkCaseId}
            </foreach>
    </select>

    <update id="updateVersionNumNotObjectVersion">
        UPDATE test_case
        SET version_num = version_num + 1,
            last_updated_by = #{userId},
            last_update_date = current_timestamp
        WHERE case_id = #{caseId}
    </update>

    <insert id="batchInsert">
        INSERT INTO test_case (case_id, case_num, summary, description, rank, folder_id, version_num, project_id, priority_id,
        object_version_number, created_by, last_updated_by, custom_num)
        VALUES
        <foreach collection="testCaseList" item="case" separator=",">
            (#{case.caseId}, #{case.caseNum}, #{case.summary}, #{case.description}, #{case.rank}, #{case.folderId}, #{case.versionNum}, #{case.projectId}, #{case.priorityId},
            1,#{case.createdBy}, #{case.lastUpdatedBy}, #{case.customNum})
        </foreach>
    </insert>
</mapper>