<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.test.manager.infra.mapper.TestCycleCaseMapper">

    <resultMap type="io.choerodon.test.manager.infra.dto.TestCycleCaseDTO" id="BaseResultMap">
        <id column="execute_id" property="executeId"/>
        <id column="cycle_id" property="cycleId"/>
        <id column="issue_id" property="caseId"/>
        <id column="rank" property="rank"/>
        <id column="object_version_number" property="objectVersionNumber"/>
        <id column="execution_status" property="executionStatus"/>
        <id column="status_name" property="executionStatusName"/>
        <id column="assigned_to" property="assignedTo"/>
        <id column="description" property="description"/>
        <id column="cycle_name" property="cycleName"/>
        <id column="folder_name" property="folderName"/>
        <id column="version_id" property="versionId"/>
        <id column="last_update_date" property="lastUpdateDate"/>
        <id column="creation_date" property="creationDate"/>
        <id column="last_updated_by" property="lastUpdatedBy"/>
        <id column="created_by" property="createdBy"/>
        <id column="last_execute_id" property="lastExecuteId"/>
        <id column="plan_id" property="planId"/>
        <id column="next_execute_id" property="nextExecuteId"/>
        <collection property="caseDefect"
                    ofType="io.choerodon.test.manager.infra.dto.TestCycleCaseDefectRelDTO">
            <id column="defect_issue_id" property="issueId"/>
            <id column="defect_type" property="defectType"/>
            <id column="defect_link_id" property="defectLinkId"/>
            <id column="defece_id" property="id"/>
        </collection>
        <collection property="caseAttachment"
                    ofType="io.choerodon.test.manager.infra.dto.TestCycleCaseAttachmentRelDTO">
            <id column="url" property="url"/>
            <id column="attachment_name" property="attachmentName"/>
            <id column="attachment_link_id" property="attachmentLinkId"/>
            <id column="attachment_type" property="attachmentType"/>
            <id column="id" property="id"/>
        </collection>
        <collection property="cycleCaseStep" ofType="io.choerodon.test.manager.infra.dto.TestCycleCaseStepDTO">
            <id column="step_id" property="stepId"/>
            <id column="description" property="description"/>
            <id column="step_status_name" property="statusName"/>
            <id column="test_step" property="testStep"/>
            <id column="test_data" property="testData"/>
            <id column="expected_result" property="expectedResult"/>
        </collection>
    </resultMap>

    <resultMap type="io.choerodon.test.manager.infra.dto.TestCycleCaseDTO" id="BaseCycleAndStep">
    <id column="execute_id" property="executeId"/>
    <id column="cycle_id" property="cycleId"/>
    <id column="issue_id" property="caseId"/>
    <id column="rank" property="rank"/>
    <id column="object_version_number" property="objectVersionNumber"/>
    <id column="execution_status" property="executionStatus"/>
    <id column="status_name" property="executionStatusName"/>
    <id column="assigned_to" property="assignedTo"/>
    <id column="description" property="description"/>
    <id column="summary" property="summary"/>
    <id column="folder_name" property="folderName"/>
    <id column="version_id" property="versionId"/>
    <id column="priority_id" property="priorityId"/>
    <id column="last_update_date" property="lastUpdateDate"/>
    <id column="creation_date" property="creationDate"/>
    <id column="last_updated_by" property="lastUpdatedBy"/>
    <id column="created_by" property="createdBy"/>
        <collection property="cycleCaseStep" ofType="io.choerodon.test.manager.infra.dto.TestCycleCaseStepDTO">
            <id column="execute_step_id" property="executeStepId"/>
            <id column="step_execute_id" property="executeId"/>
            <id column="step_id" property="stepId"/>
            <id column="step_description" property="description"/>
            <id column="step_status_name" property="statusName"/>
            <id column="test_step" property="testStep"/>
            <id column="test_data" property="testData"/>
            <id column="expect_result" property="expectedResult"/>
            <id column="step_rank" property="rank"/>
            <id column="step_object_version_number" property="objectVersionNumber"/>
        </collection>
    </resultMap>

    <select id="filter" resultMap="BaseResultMap">
        SELECT cycle.execute_id,cycle.cycle_id,cycle.case_id,cycle.rank,cycle.object_version_number,
        cycle.execution_status,cycle.assigned_to,cycle.description,cycle.last_update_date,cycle.last_updated_by,
        defect.defect_type,defect.id defece_id,defect.defect_link_id,defect.issue_id defect_issue_id
        FROM test_cycle_case cycle
        left join test_cycle_case_defect_rel defect
        on cycle.execute_id=defect.defect_link_id and defect.defect_type='CYCLE_CASE'
        where cycle.cycle_id=#{cycleId}
        <if test="executionStatus != null">
            and
            cycle.execution_status in
            <foreach item="item" index="index" collection="executionStatus"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>

    </select>


    <select id="queryWithAttachAndDefect" resultMap="BaseResultMap">
        SELECT
        cycle.execute_id,
        cycle.cycle_id,
        cycle.case_id,
        cycle.rank,
        cycle.object_version_number,
        cycle.execution_status,
        cycle.assigned_to,
        cycle.description,
        tc.cycle_name,
        attach.url,
        attach.attachment_name,
        attach.id,
        cycle.last_update_date,
        cycle.last_updated_by,
        cycle.creation_date,
        cycle.created_by,
        defect.defect_type,
        defect.id defece_id,
        defect.defect_link_id,
        <![CDATA[(select execute_id from test_cycle_case where cycle_id=cycle.cycle_id and cycle.rank > rank order by rank DESC limit 1) last_execute_id,
        (select execute_id from test_cycle_case where cycle_id=cycle.cycle_id and cycle.rank < rank order by rank  ASC limit 1) next_execute_id, ]]>
        defect.issue_id defect_issue_id
        FROM
        ( SELECT * FROM test_cycle_case
        <where>
            <if test="dto!=null and dto.caseId != null">
                AND issue_id = #{dto.caseId}
            </if>
            <if test="dto!=null and dto.cycleId != null">
                AND cycle_id = #{dto.cycleId}
            </if>
            <if test="dto!=null and dto.executeId != null">
                AND execute_id = #{dto.executeId}
            </if>
            <if test="dto!=null and dto.projectId != null">
                AND project_id = #{dto.projectId}
            </if>
            <if test="dto!=null and dto.executionStatus != null">
                AND execution_status = #{dto.executionStatus}
            </if>
            <if test="dto!=null and dto.description != null">
                AND description like CONCAT(CONCAT('%', #{dto.description}), '%')
            </if>
            <if test="dto!=null and dto.assignedTo != null">
                AND assigned_to = #{dto.assignedTo}
            </if>
            <if test="dto!=null and dto.lastUpdatedBy != null">
                AND last_updated_by = #{dto.lastUpdatedBy}
            </if>
            <if test="dto!=null and dto.lastUpdateDate != null">
                AND last_update_date <![CDATA[>=]]> #{dto.lastUpdateDate}
            </if>
        </where>
        order by rank
        <if test="pageSize !=0">
            limit #{page} , #{pageSize}
        </if>
        ) cycle
        LEFT JOIN test_cycle_case_attach_rel attach ON cycle.execute_id = attach.attachment_link_id
        AND attach.attachment_type = 'CYCLE_CASE'
        LEFT JOIN test_cycle_case_defect_rel defect ON cycle.execute_id = defect.defect_link_id
        AND defect.defect_type = 'CYCLE_CASE'
        left join test_cycle tc on cycle.cycle_id = tc.cycle_id
    </select>

    <select id="queryByFatherCycleWithAttachAndDefect" resultMap="BaseResultMap">
        SELECT
        rCycle.cycle_name,
        cycle.execute_id,
        cycle.cycle_id,
        cycle.case_id,
        cycle.rank,
        cycle.object_version_number,
        cycle.execution_status,
        cycle.assigned_to,
        cycle.description,
        attach.url,
        attach.attachment_name,
        attach.id,
        cycle.last_update_date,
        cycle.last_updated_by,
        defect.defect_type,
        defect.id defece_id,
        defect.defect_link_id,
        defect.issue_id defect_issue_id
        FROM
        ( SELECT * FROM test_cycle_case
        <where>
           cycle_id in
            <foreach item="dto" index="index" collection="dtos"
                     open="(" separator="," close=")">
                #{dto.cycleId}
            </foreach>
            <if test="!dtos.isEmpty and dtos.get(0).assignedTo != null">
                AND assigned_to = #{dtos[0].assignedTo}
            </if>
            <if test="!dtos.isEmpty and dtos.get(0).lastUpdatedBy != null">
                AND last_updated_by = #{dtos[0].lastUpdatedBy}
            </if>
            <if test="!dtos.isEmpty and dtos.get(0).executionStatus != null">
                AND execution_status = #{dtos[0].executionStatus}
            </if>
            <if test="!dtos.isEmpty and dtos.get(0).description != null">
                AND description like CONCAT(CONCAT('%', #{dtos[0].description}), '%')
            </if>
        </where>
        <if test="sort != null">
            order by ${sort}
        </if>
        <if test="pageSize !=0">
            limit #{page} , #{pageSize}
        </if>
        ) cycle
        LEFT JOIN test_cycle_case_attach_rel attach ON cycle.execute_id = attach.attachment_link_id
        AND attach.attachment_type = 'CYCLE_CASE'
        LEFT JOIN test_cycle_case_defect_rel defect ON cycle.execute_id = defect.defect_link_id
        AND defect.defect_type = 'CYCLE_CASE'
        LEFT JOIN test_cycle rCycle ON cycle.cycle_id = rCycle.cycle_id
    </select>


    <select id="queryWithAttachAndDefectCount" resultType="java.lang.Long">
        SELECT count(execute_id) FROM test_cycle_case
        <where>
            <if test="dto!=null and dto.caseId != null">
                AND issue_id = #{dto.caseId}
            </if>
            <if test="dto!=null and dto.cycleId != null">
                AND cycle_id = #{dto.cycleId}
            </if>
            <if test="dto!=null and dto.executeId != null">
                AND execute_id = #{dto.executeId}
            </if>
            <if test="dto!=null and dto.executionStatus != null">
                AND execution_status = #{dto.executionStatus}
            </if>
            <if test="dto!=null and dto.description != null">
                AND description like CONCAT(CONCAT('%', #{dto.description}), '%')
            </if>
            <if test="dto!=null and dto.assignedTo != null">
                AND assigned_to = #{dto.assignedTo}
            </if>
            <if test="dto!=null and dto.lastUpdatedBy != null">
                AND last_updated_by = #{dto.lastUpdatedBy}
            </if>
            <if test="dto!=null and dto.lastUpdateDate != null">
                AND last_update_date <![CDATA[>=]]> #{dto.lastUpdateDate}
            </if>
        </where>
    </select>

    <select id="queryCaseAllInfoInCyclesOrVersions" resultMap="BaseResultMap">
        SELECT
        cycle.execute_id,
        cycle.cycle_id,
        cycle.case_id,
        cycle.rank,
        cycle.object_version_number,
        cycle.execution_status,
        cycle.assigned_to,
        cycle.description,
        cycle.last_update_date,
        cycle.last_updated_by,
        cycle1.version_id,
        status1.status_name,
        step.test_step,
        step.test_data,
        step.expected_result,
        step.coment,
        step.step_status_name,
        defect.defect_type,
        defect.id defece_id,
        defect.defect_link_id,
        defect.issue_id defect_issue_id,
        attach.url,
        attach.attachment_name,
        attach.id,
        attach.attachment_type,
        attach.attachment_link_id,
        CASE
        cycle1.type
        WHEN 'folder' THEN
        ( SELECT cycle2.cycle_name FROM test_cycle cycle2 WHERE cycle1.parent_cycle_id = cycle2.cycle_id ) ELSE
        cycle1.cycle_name
        END AS cycle_name,
        CASE
        cycle1.type
        WHEN 'folder' THEN
        cycle1.cycle_name
        END AS folder_name
        FROM
        test_cycle_case cycle
        LEFT JOIN test_cycle cycle1 ON cycle1.cycle_id = cycle.cycle_id
        LEFT JOIN test_status status1 ON cycle.execution_status = status1.status_id
        AND status1.status_type = 'CYCLE_CASE'
        LEFT JOIN (
        SELECT
        step1.execute_step_id,
        step1.execute_id,
        step1.step_id,
        step1.description coment,
        status_name step_status_name,
        step2.test_step,
        step2.test_data,
        step2.expected_result
        FROM
        test_cycle_case_step step1
        LEFT JOIN test_case_step step2 ON step1.step_id = step2.step_id
        LEFT JOIN test_status ON step1.step_status = status_id
        AND status_type = 'CASE_STEP'
        ORDER BY
        rank
        ) step ON step.execute_id = cycle.execute_id
        LEFT JOIN test_cycle_case_defect_rel defect ON ( cycle.execute_id = defect.defect_link_id AND defect.defect_type
        = 'CYCLE_CASE' )
        OR ( step.execute_step_id = defect.defect_link_id AND defect.defect_type = 'CASE_STEP' )
        LEFT JOIN test_cycle_case_attach_rel attach ON ( cycle.execute_id = attach.attachment_link_id AND
        attach.attachment_type = 'CYCLE_CASE' )
        OR ( step.execute_step_id = attach.attachment_link_id AND attach.attachment_type = 'CYCLE_STEP' )
        OR ( step.step_id = attach.attachment_link_id AND attach.attachment_type = 'CASE_STEP' )
        <where>
            <if test="cycleIds !=null">
                cycle1.cycle_id in
                <foreach item="item" index="index" collection="cycleIds"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="versionIds !=null">
                cycle1.version_id in
                <foreach item="item" index="index" collection="versionIds"
                         open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        ORDER BY cycle.rank
    </select>


    <resultMap type="io.choerodon.test.manager.infra.dto.TestCycleCaseDTO" id="BaseResultMapForReporter">
        <id column="execute_id" property="executeId"/>
        <id column="cycle_id" property="cycleId"/>
        <id column="issue_id" property="issueId"/>
        <id column="rank" property="rank"/>
        <id column="object_version_number" property="objectVersionNumber"/>
        <id column="execution_status" property="executionStatus"/>
        <id column="status_name" property="executionStatusName"/>
        <id column="assigned_to" property="assignedTo"/>
        <id column="description" property="description"/>
        <id column="cycle_name" property="cycleName"/>
        <id column="folder_name" property="folderName"/>
        <id column="last_update_date" property="lastUpdateDate"/>
        <id column="last_updated_by" property="lastUpdatedBy"/>
        <collection property="caseDefect"
                    ofType="io.choerodon.test.manager.infra.dto.TestCycleCaseDefectRelDTO">
            <id column="defect_issue_id" property="issueId"/>
            <id column="defect_type" property="defectType"/>
            <id column="defect_link_id" property="defectLinkId"/>
            <id column="defecet_id" property="id"/>
        </collection>

        <collection property="subStepDefects"
                    ofType="io.choerodon.test.manager.infra.dto.TestCycleCaseDefectRelDTO">
            <id column="sub_defect_issue_id" property="issueId"/>
            <id column="sub_defect_type" property="defectType"/>
            <id column="sub_defect_link_id" property="defectLinkId"/>
            <id column="sub_defece_id" property="id"/>
        </collection>
    </resultMap>


    <select id="queryInIssues" resultMap="BaseResultMapForReporter">
        SELECT
        cycle.execute_id,
        cycle.cycle_id,
        cycle.case_id,
        cycle.rank,
        cycle.object_version_number,
        defect.defect_type,
        defect.id defece_id,
        defect.defect_link_id,
        defect.issue_id defect_issue_id,
        cycle.execution_status,
        cycle.assigned_to,
        cycle.description,
        cycle.last_update_date,
        cycle.last_updated_by,
        step.issue_id sub_defect_issue_id,
        step.id sub_defece_id,
        step.defect_type sub_defect_type,
        step.defect_link_id sub_defect_link_id,
        CASE
        cycle1.type
        WHEN 'folder' THEN
        ( SELECT cycle2.cycle_name FROM test_cycle cycle2 WHERE cycle1.parent_cycle_id = cycle2.cycle_id ) ELSE cycle1.cycle_name
        END AS cycle_name,
        CASE
        cycle1.type
        WHEN 'folder' THEN
        cycle1.cycle_name
        END AS folder_name
        FROM
        test_cycle_case cycle
        LEFT JOIN test_cycle cycle1 ON cycle1.cycle_id = cycle.cycle_id
        LEFT JOIN test_cycle_case_defect_rel defect ON cycle.execute_id = defect.defect_link_id
        AND defect.defect_type = 'CYCLE_CASE'
        LEFT JOIN ( SELECT execute_id, id, defect_type, defect_link_id, issue_id FROM test_cycle_case_step INNER JOIN test_cycle_case_defect_rel ON execute_step_id = defect_link_id AND defect_type = 'CASE_STEP' ) step ON step.execute_id = cycle.execute_id
        WHERE
        cycle.case_id IN
        <foreach item="item" index="index" collection="ids"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="queryCycleCaseForReporter" resultMap="BaseResultMap">
        SELECT cycle.execute_id,cycle.cycle_id,cycle.execution_status,cycle1.cycle_name,cycle.case_id,cycle1.plan_id
        FROM test_cycle_case cycle
        left join test_cycle cycle1 on cycle1.cycle_id=cycle.cycle_id
        where cycle.execute_id in
        <foreach item="item" index="index" collection="ids"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="validateCycleCaseInCycle" resultType="java.lang.Long">
        select count(case1.execute_id) from test_cycle_case case1
        left join test_cycle cycle on cycle.cycle_id=case1.cycle_id
        where cycle.type != 'temp' and case1.cycle_id=#{cycleId} and case1.issue_id=#{issueId}
    </select>


    <select id="getLastedRank" resultType="java.lang.String">
        SELECT
            tcc.rank
        FROM
            test_cycle_case tcc
        LEFT JOIN test_cycle tc
        on tc.cycle_id=tcc.cycle_id
        WHERE
            tc.plan_id = #{planId}
        ORDER BY
            tcc.rank DESC
            LIMIT 1

    </select>

    <select id="getFirstRank" resultType="java.lang.String">
        SELECT
            tcc.rank
        FROM
            test_cycle_case tcc
        JOIN test_cycle tc on tc.cycle_id=tcc.cycle_id
        WHERE
            tc.plan_id = #{planId}
        ORDER BY
            tcc.rank
        LIMIT 1
    </select>

    <insert id="batchInsertTestCycleCases" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="executeId">
        INSERT INTO test_cycle_case(cycle_id, issue_id, rank, execution_status, assigned_to, description,project_id, object_version_number,
        created_by, creation_date, last_updated_by, last_update_date) VALUES
        <foreach collection="list" item="cycleCase" separator=",">
            (#{cycleCase.cycleId}, #{cycleCase.issueId}, #{cycleCase.rank}, #{cycleCase.executionStatus}, #{cycleCase.assignedTo},
            #{cycleCase.description},#{cycleCase.projectId}, 1, #{cycleCase.createdBy}, #{cycleCase.creationDate}, #{cycleCase.lastUpdatedBy}, #{cycleCase.lastUpdateDate})
        </foreach>
    </insert>

    <update id="updateAuditFields">
        update test_cycle_case
        set created_by = #{userId}, creation_date = #{date}, last_updated_by = #{userId}, last_update_date = #{date}
        where execute_id IN
        <foreach item="item" index="index" collection="executeIds"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="queryByCaseId" resultType="io.choerodon.test.manager.infra.dto.TestCycleCaseDTO">
        SELECT
            tcc.*, ts.status_name executionStatusName,
            ts.status_color statusColor
        FROM
            `test_cycle_case` tcc
        LEFT JOIN test_status ts ON ts.status_id = tcc.execution_status
        WHERE
            tcc.execute_id = #{executeId};
    </select>

    <select id="queryExecutionStatus" resultType="io.choerodon.test.manager.infra.dto.TestStatusDTO">
        SELECT
             ts.status_id statusId,
            ts.status_name statusName,
            count(execution_status) count
        FROM
            `test_cycle_case` tcc
        LEFT JOIN test_cycle tc ON tcc.cycle_id = tc.cycle_id
        LEFT JOIN test_status ts ON ts.status_id = tcc.execution_status
        WHERE
        <if test="planId!=null" >
            tc.plan_id = #{planId}
        </if>
        <if test="cycleIds !=null and cycleIds.size>0">
            AND tc.cycle_id IN
            <foreach item="cycleId" index="index" collection="cycleIds"
                     open="(" separator="," close=")">
                #{cycleId}
            </foreach>
        </if>
        GROUP BY
            tcc.execution_status;
    </select>

    <select id="queryFolderCycleCase" resultType="io.choerodon.test.manager.infra.dto.TestCycleCaseDTO">
        SELECT
        tp.status_code AS planStatus,
        tcc.execute_id,
        tcc.cycle_id,
        tcc.case_id,
        tcc.rank,
        tcc.execution_status,
        tcc.assigned_to,
        tcc.description,
        tcc.object_version_number,
        tcc.created_by,
        tcc.creation_date,
        tcc.project_id,
        tcc.summary,
        tcc.source,
        tcc.version_num,
        tcc.last_updated_by,
        tcc.last_update_date,
        tcc.priority_id,
        tpy.name AS priority_name,
        tpy.colour AS priority_colour,
        tpy.sequence,
        ts.status_color AS statusColor,
        ts.status_name AS executionStatusName
        FROM
            `test_cycle_case` tcc
        JOIN test_priority tpy ON tcc.priority_id = tpy.id
        LEFT JOIN test_cycle tc ON tc.cycle_id = tcc.cycle_id
        LEFT JOIN test_status ts ON ts.status_id=tcc.execution_status
        LEFT JOIN test_plan tp ON tp.plan_id = tc.plan_id
        WHERE
            tc.plan_id = #{planId}
        <if test="cycleIds !=null and cycleIds.size>0">
        AND tc.cycle_id IN
        <foreach item="cycle" index="index" collection="cycleIds"
                 open="(" separator="," close=")">
            #{cycle}
        </foreach>
        </if>
        <include refid="sqlParam"/>
        <if test="searchDTO != null and searchDTO.searchArgs != null and searchDTO.searchArgs.priorityId != null">
            AND tcc.priority_id = #{searchDTO.searchArgs.priorityId}
        </if>
         order by tcc.rank
    </select>

    <select id="selectCaseCount" resultType="java.lang.Integer">
        select count(t2.execute_id)
        from test_cycle t1
        left join test_cycle_case t2
        on t1.cycle_id = t2.cycle_id
        where t1.plan_id = #{planId}
    </select>

    <update id="fixCycleCase">
        UPDATE test_cycle_case tcc
        SET tcc.summary = (
            SELECT
                tc.summary
            FROM
                test_case tc
            WHERE
                tcc.case_id = tc.case_id
        ),
         tcc.version_num = (
            SELECT
                tc.version_num
            FROM
                test_case tc
            WHERE
                tcc.case_id = tc.case_id
        )
    </update>

    <sql id="sqlParam">
        <if test="searchDTO != null">
            <if test="searchDTO.contents != null and searchDTO.contents.size > 0">
                AND
                <foreach collection="searchDTO.contents" item="content" open="(" separator=" OR " close=")">
                    (tcc.summary LIKE CONCAT(CONCAT('%', #{content, jdbcType=VARCHAR}),'%'))
                </foreach>
            </if>
            <if test="searchDTO.searchArgs != null">
                <if test='searchDTO.searchArgs.summary != null'>
                    AND tcc.summary  LIKE CONCAT(CONCAT('%', #{searchDTO.searchArgs.summary, jdbcType=VARCHAR}),'%')
                </if>
                <if test="searchDTO.searchArgs.executionStatus != null">
                    AND tcc.execution_status = #{searchDTO.searchArgs.executionStatus}
                </if>
                <if test="searchDTO.searchArgs.assignUser != null">
                    AND tcc.assigned_to = #{searchDTO.searchArgs.assignUser}
                </if>
            </if>
        </if>
    </sql>

    <update id="fixSource">
        UPDATE test_cycle_case
        SET source =
        if(execution_status=1,'none','manual')
    </update>

    <update id="fixRank">
        <foreach collection="testCycleCaseDTOS" item="cycleCase" index="index" open="" close="" separator=";">
            UPDATE test_cycle_case
            <set>
                rank = #{cycleCase.rank}
            </set>
            where execute_id = #{cycleCase.executeId}
        </foreach>
    </update>

    <select id="listByCycleIds" resultType="io.choerodon.test.manager.infra.dto.TestCycleCaseDTO">
          select * from test_cycle_case
          where
          cycle_id in
          <foreach collection="cycleIds" item="cycleId"  open="(" close=")" separator=",">
           #{cycleId}
          </foreach>
    </select>

    <insert id="batchInsert" useGeneratedKeys="true" keyProperty="executeId">
      insert into test_cycle_case(cycle_id,case_id,rank,description
      ,project_id,version_num,execution_status
      ,created_by,last_updated_by,summary,source,priority_id)
      values
      <foreach collection="list" item="item" separator=",">
          (#{item.cycleId},#{item.caseId},#{item.rank},#{item.description},#{item.projectId}
          ,#{item.versionNum},#{item.executionStatus}
          ,#{item.createdBy},#{item.lastUpdatedBy},#{item.summary},#{item.source},#{item.priorityId})
      </foreach>
    </insert>
    <update id="batchAssign">
        update test_cycle_case
        set assigned_to =#{assignUserId}
        where execute_id IN
        <foreach item="caseId" index="index" collection="cycleCaseIds"
                 open="(" separator="," close=")">
            #{caseId}
        </foreach>
    </update>

    <delete id="batchDeleteByExecutIds">
        delete from test_cycle_case where
        execute_id in
        <foreach collection="list" item="executId" open="(" close=")" separator=",">
            #{executId}
        </foreach>
    </delete>

    <resultMap id="testCaseMap" type="io.choerodon.test.manager.api.vo.CaseCompareVO">
        <result  column="case_id" property="caseId"/>
        <association property="testCase" javaType="io.choerodon.test.manager.api.vo.TestCaseVO">
            <id column="case_id" property="caseId"/>
            <result  column="summary" property="summary"/>
            <result  column="description" property="description"/>
            <result  column="priority_id" property="priorityId"/>
        </association>
        <collection  property="caseStep" ofType="io.choerodon.test.manager.infra.dto.TestCaseStepDTO">
            <id column="step_id" property="stepId"/>
            <result column="test_step" property="testStep"/>
            <result column="test_data" property="testData"/>
            <result column="expected_result" property="expectedResult"/>
            <result column="rank" property="rank"/>
        </collection>
        <collection property="caseAttach" ofType="io.choerodon.test.manager.infra.dto.TestCaseAttachmentDTO">
            <id column="attachment_id" property="attachmentId"/>
            <result column="url" property="url"/>
            <result column="file_name" property="fileName"/>
        </collection>
    </resultMap>

    <select id="queryTestCaseMap" resultMap="testCaseMap">
        select
        tcc.summary as summary,
        tcc.description as description,
        tcc.priority_id as priority_id,
        tcc.case_id as case_id,
        tccs.step_id as step_id,
        tccs.test_step as test_step,
        tccs.test_data as test_data,
        tccs.rank as rank,
        tccs.expect_result as expected_result,
        tccar.attachment_name as file_name,
        tccar.url
        from test_cycle_case tcc
        left join test_cycle_case_step tccs on tccs.execute_id = tcc.execute_id
        left join test_cycle_case_attach_rel tccar on tccar.attachment_link_id = tcc.execute_id
        where tcc.execute_id in
        <foreach collection="list" item="executeId" open="(" close=")" separator=",">
            #{executeId}
        </foreach>     ORDER BY tcc.case_id
    </select>

    <select id="listByPlanId" resultType="long">
        select tcc.case_id from test_cycle_case tcc
        left join test_cycle tc  on tc.cycle_id = tcc.cycle_id
        left join test_plan tp on tp.plan_id = tc.plan_id
        where tp.plan_id = #{planId}
    </select>

    <select id="selectByPlanId" resultType="io.choerodon.test.manager.infra.dto.TestCycleCaseDTO">
       SELECT
        tcc.execute_id,
        tc.plan_id
       FROM
            test_cycle_case tcc
       LEFT JOIN test_cycle tc ON tc.cycle_id = tcc.cycle_id
    </select>
    <select id="selectByExecuteId" resultType="io.choerodon.test.manager.infra.dto.TestCycleCaseDTO">
        SELECT
            tcc.execute_id,tcc.assigned_to,tcc.description,ts.status_name as executionStatusName,tcc.execution_status as executionStatus
        FROM
            test_cycle_case tcc
        LEFT JOIN test_status ts on ts.status_id=tcc.execution_status
        LEFT JOIN  test_cycle_case_attach_rel tccar on tccar.attachment_link_id=tcc.execute_id
        where tcc.execute_id=#{executeId} GROUP BY execute_id
    </select>

    <select id="listAsyncCycleCase" resultType="io.choerodon.test.manager.infra.dto.TestCycleCaseDTO">
        SELECT
            tcc.*
        FROM
            test_cycle_case tcc
            INNER JOIN test_cycle tc ON tc.cycle_id = tcc.cycle_id
            INNER JOIN test_plan tp ON tp.plan_id = tc.plan_id
        WHERE
            tp.project_id = #{projectId}
            AND tcc.case_id = #{caseId}
            AND tp.init_status = 'success'
            AND tp.status_code = 'todo'
            AND tp.is_auto_sync = 1
    </select>
    <select id="selectPlanStatus" resultType="io.choerodon.test.manager.api.vo.FormStatusVO">
        SELECT
            ts.status_id,
            ts.status_name,
            ts.status_color,
            count(tcc.execution_status) counts
        FROM
            `test_cycle_case` tcc
        LEFT JOIN test_cycle tc ON tc.cycle_id = tcc.cycle_id
        LEFT JOIN test_status ts ON ts.status_id = tcc.execution_status
        WHERE
            plan_id = #{planId}
        GROUP BY
            tcc.execution_status
    </select>

    <select id="countByCycleIds" resultType="integer">
        SELECT
            count(execute_id)
        FROM
            `test_cycle_case`
         where cycle_id IN
        <foreach item="cycleId" index="index" collection="list"
                 open="(" separator="," close=")">
            #{cycleId}
        </foreach>
    </select>
    <select id="selectCycleCaseAndStep" resultMap="BaseCycleAndStep">
        SELECT
	tcc.*, tccs.execute_step_id,
	tccs.execute_id as step_execute_id,
	tccs.test_step,
	tccs.test_data,
	tccs.step_id,
	tccs.rank as step_rank,
	tccs.description as step_description,
	tccs.step_status,
	tccs.expect_result,
	tccs.object_version_number step_object_version_number
    FROM
        test_cycle_case tcc
    LEFT JOIN test_cycle_case_step tccs ON tcc.execute_id = tccs.execute_id
    WHERE
        tcc.execute_id = #{executeId}
        order by tccs.rank
    </select>
    <select id="checkPriorityDelete" resultType="java.lang.Long">
        select count(tcc.case_id)
        from test_cycle_case tcc
        where tcc.priority_id = #{priorityId}
        AND tcc.project_id IN
        <foreach collection="projectIds" item="index" open="(" separator="," close=")">
            #{index}
        </foreach>
    </select>

    <select id="selectALLProjectId" resultType="java.lang.Long">
        SELECT project_id FROM test_cycle_case GROUP BY project_id
    </select>

    <select id="pagedQueryMyExecutionalCase" resultType="io.choerodon.test.manager.api.vo.TestFolderCycleCaseVO">
        SELECT
            tp.plan_id,
            tp.name AS plan_name,
            tp.status_code AS plan_status,
            tcc.summary,
            tcc.execute_id,
            tcc.cycle_id,
            tcc.case_id,
            tcc.project_id,
            tcc.rank,
            tcc.execution_status,
            tcc.assigned_to,
            tcc.object_version_number,
            tcc.source,
            tcc.priority_id,
            tpy.name AS priority_name,
            tpy.colour AS priority_colour,
            tpy.sequence,
            ts.status_color AS statusColor,
            ts.status_name AS executionStatusName
        FROM
            test_cycle_case tcc
            JOIN test_priority tpy ON tcc.priority_id = tpy.id
            LEFT JOIN test_cycle tc ON tc.cycle_id = tcc.cycle_id
            LEFT JOIN test_status ts ON ts.status_id = tcc.execution_status
            LEFT JOIN test_plan tp ON tp.plan_id = tc.plan_id
        WHERE
            tcc.assigned_to = #{userId}
            AND tcc.project_id IN
            <foreach collection="projectIds" item="projectId" open="(" separator="," close=")">
                #{projectId}
            </foreach>
            AND organization_id = #{organizationId}
            AND tp.status_code = 'doing'
        ORDER BY
            tcc.rank
    </select>

    <update id="updateExecuteStatus">
         UPDATE test_cycle_case
        SET execution_status = (
            SELECT
                status_id
            FROM
                test_status
            WHERE
                project_id = 0
            AND status_type = 'CYCLE_CASE'
            AND status_name = '通过'
        )
        WHERE
	execute_id = #{executeId}
    </update>
    <update id="batchUpdateCycleCasePriority">
        update test_cycle_case
        set priority_id = #{changePriorityId},last_updated_by = #{userId}
        where priority_id = #{priorityId}
        AND project_id IN
        <foreach collection="projectIds" item="index" open="(" separator="," close=")">
            #{index}
        </foreach>
    </update>

    <update id="updatePriorityByProject">
        UPDATE test_cycle_case
        SET priority_id = #{priorityId}
        WHERE priority_id = 0
        and project_id IN
        <foreach collection="projectIds" item="index" open="(" separator="," close=")">
            #{index}
        </foreach>
    </update>
</mapper>



