<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.choerodon.test.manager.infra.mapper.TestCycleMapper">
    <resultMap id="processBarSection"
               type="io.choerodon.test.manager.infra.dto.TestCycleProDTO$ProcessBarSection">
        <id column="color" property="color"/>
        <id column="statusId" property="statusId"/>
        <id column="statusName" property="statusName"/>
        <id column="counts" property="counts"/>
        <id column="projectId" property="projectId"/>
    </resultMap>

    <resultMap id="hashmap" type="java.util.LinkedHashMap">
        <result column="statusId" property="statusId" javaType="Long" jdbcType="BIGINT"/>
        <association property="processBarSection" resultMap="processBarSection"/>
    </resultMap>

    <resultMap type="io.choerodon.test.manager.infra.dto.TestCycleDTO" id="queryAboutBarResultMap">
        <id column="cycle_id" property="cycleId"/>
        <id column="parent_cycle_id" property="parentCycleId"/>
        <id column="cycle_name" property="cycleName"/>
        <id column="version_id" property="versionId"/>
        <id column="description" property="description"/>
        <id column="build" property="build"/>
        <id column="folder_id" property="folderId"/>
        <id column="environment" property="environment"/>
        <id column="from_date" property="fromDate"/>
        <id column="to_date" property="toDate"/>
        <id column="type" property="type"/>
        <id column="object_version_number" property="objectVersionNumber"/>
        <id column="created_by" property="createdBy"/>
        <id column="rank" property="rank"/>
        <association property="cycleCaseList" resultMap="hashmap"/>
    </resultMap>

    <resultMap type="io.choerodon.test.manager.infra.dto.TestCycleDTO" id="BaseResultMap">
        <id column="cycle_id" property="cycleId"/>
        <id column="parent_cycle_id" property="parentCycleId"/>
        <id column="cycle_name" property="cycleName"/>
        <id column="version_id" property="versionId"/>
        <id column="description" property="description"/>
        <id column="build" property="build"/>
        <id column="environment" property="environment"/>
        <id column="from_date" property="fromDate"/>
        <id column="to_date" property="toDate"/>
        <id column="type" property="type"/>
        <id column="object_version_number" property="objectVersionNumber"/>
        <id column="created_by" property="createdBy"/>
        <id column="rank" property="rank"/>
    </resultMap>
    <select id="queryOneCycleBar" resultMap="queryAboutBarResultMap">
        SELECT
            cycle1.cycle_id,
            cycle1.parent_cycle_id,
            cycle1.folder_id,
            cycle1.cycle_name,
            cycle1.type,
            cycle1.version_id,
            cycle1.description,
            cycle1.build,
            cycle1.environment,
            cycle1.from_date,
            cycle1.to_date,
            cycle1.object_version_number,
            cycle1.created_by,
            cycle1.rank,
            cycle1.project_id,
            color1.color,
            color1.counts,
            color1.statusName,
            color1.statusId
        FROM
            test_cycle cycle1
            LEFT JOIN (
            SELECT
                color,
                count( 1 ) counts,
                temp1.cycle_id,
                statusId,
                statusName
            FROM
                (
                SELECT
                    cycle.execute_id,
                    cycle.cycle_id,
                    status1.status_id statusId,
                    status1.status_color color,
                    status1.status_name statusName
                FROM
                    test_cycle_case cycle
                    LEFT JOIN test_status status1 ON cycle.execution_status = status1.status_id
                ) temp1
            GROUP BY
                temp1.statusId,
                temp1.cycle_id
            ) color1 ON color1.cycle_id = cycle1.cycle_id
        WHERE
            cycle1.parent_cycle_id = #{cycleId}
        ORDER BY
            cycle1.cycle_id,
            cycle1.rank,
            color1.statusId
    </select>

    <select id="query" resultMap="queryAboutBarResultMap">
        SELECT
            cycle1.cycle_id,
            cycle1.parent_cycle_id,
            cycle1.folder_id,
            cycle1.cycle_name,
            cycle1.type,
            cycle1.version_id,
            cycle1.description,
            cycle1.build,
            cycle1.environment,
            cycle1.from_date,
            cycle1.to_date,
            cycle1.object_version_number,
            cycle1.created_by,
            cycle1.rank,
            color1.projectId,
            color1.color,
            color1.counts,
            color1.statusName,
            color1.statusId
        FROM
            test_cycle cycle1
            LEFT JOIN (
            SELECT
                color,
                count( 1 ) counts,
                temp1.cycle_id,
                statusId,
                statusName,
                projectId
            FROM
                (
                SELECT
                    cycle.execute_id,
                    cycle.cycle_id,
                    status1.status_id statusId,
                    status1.status_color color,
                    status1.status_name statusName,
                    status1.project_id projectId
                FROM
                    test_cycle_case cycle
                    LEFT JOIN test_status status1 ON cycle.execution_status = status1.status_id
                where cycle.project_id = #{projectId}
            <if test="assignedTo!=null">
                AND cycle.assigned_to = #{assignedTo}
            </if>
                ) temp1
            GROUP BY
                temp1.statusId,
                temp1.cycle_id
            ) color1 ON color1.cycle_id = cycle1.cycle_id
        WHERE
            cycle1.project_id = #{projectId} AND
            cycle1.version_id IN
            <foreach item="item" index="index" collection="versionIds"
                     open="(" separator="," close=")">
                #{item}
            </foreach>
        ORDER BY
            cycle1.rank,
            cycle1.cycle_id,
            color1.statusId
    </select>

    <select id="validateCycle" resultType="java.lang.Long">
        select count(cycle_id) from test_cycle
        <where>
            cycle_name = #{cycleName} and version_id = #{versionId}
            <choose>
                <when test="parentCycleId!=null">
                    and parent_cycle_id=#{parentCycleId}
                </when>
                <otherwise>
                    and type !='folder'
                </otherwise>
            </choose>
            <if test="cycleId!=null">
                and cycle_id !=#{cycleId}
            </if>
        </where>
    </select>

    <select id="selectCyclesInVersions" resultType="java.lang.Long">
        SELECT DISTINCT
        cycle_id
        FROM
        test_cycle
        WHERE
        version_id IN
        <foreach item="item" index="index" collection="versionIds"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="queryChildCycle" resultMap="BaseResultMap">
        SELECT
        cycle_id,cycle_name,rank
        FROM
        test_cycle
        <where>
            <if test="dto!=null and dto.cycleId != null">
                parent_cycle_id=#{dto.cycleId}
            </if>
        </where>
        ORDER BY
        rank
    </select>

    <select id="queryCycleInVersion" resultType="io.choerodon.test.manager.infra.dto.TestCycleDTO">
        SELECT
        cycle_id,cycle_name,rank
        FROM
        test_cycle
        <where>
            <if test="dto!=null and dto.versionId != null">
                version_id = #{dto.versionId}
            </if>
            <if test="dto!=null and dto.type != null">
                AND type = #{dto.type}
            </if>
        </where>
        ORDER BY
        rank
    </select>

    <select id="queryByIds" resultType="io.choerodon.test.manager.infra.dto.TestCycleDTO">
        SELECT cycle_id,cycle_name,rank
        FROM
        test_cycle
        WHERE
        cycle_id IN
        <foreach item="item" index="index" collection="cycleIds" open="(" separator="," close=")">
            #{item}
        </foreach>
        ORDER BY
        rank
    </select>

    <select id="getCycleLastedRank" resultType="java.lang.String">
        SELECT
            rank
        FROM
            test_cycle
        WHERE
            version_id = #{versionId}
            AND type = 'cycle'
        ORDER BY
            rank DESC
            LIMIT 1
    </select>

    <select id="getPlanLastedRank" resultType="java.lang.String">
        SELECT
            rank
        FROM
            test_cycle
        WHERE
           plan_id=#{planId}
           and parent_cycle_id = #{parentCycleId}
        ORDER BY
            rank ASC
            LIMIT 1
    </select>

    <select id="getCycleCountInVersion" resultType="java.lang.Long">
        SELECT
            COUNT( 1 )
        FROM
            test_cycle
        WHERE
            type = 'cycle'
            AND version_id = #{versionId}
    </select>

    <select id="getFolderCountInCycle" resultType="java.lang.Long">
        SELECT
            COUNT( 1 )
        FROM
            test_cycle
        WHERE
            type = 'folder'
            AND parent_cycle_id = #{cycleId}
    </select>

    <select id="queryChildFolderByRank" resultType="io.choerodon.test.manager.infra.dto.TestCycleDTO">
        SELECT
            cycle1.cycle_id,
            cycle1.parent_cycle_id,
            cycle1.folder_id,
            cycle1.cycle_name,
            cycle1.type,
            cycle1.version_id,
            cycle1.description,
            cycle1.build,
            cycle1.environment,
            cycle1.from_date,
            cycle1.to_date,
            cycle1.object_version_number,
            cycle1.created_by,
            cycle1.rank
        FROM
            test_cycle cycle1
        WHERE
            type = 'folder'
            AND parent_cycle_id = #{cycleId}
        ORDER BY
            cycle1.rank
    </select>

    <update id="updateAuditFields">
        update test_cycle
        set created_by = #{userId}, creation_date = #{date}, last_updated_by = #{userId}, last_update_date = #{date}
        where cycle_id IN
        <foreach item="item" index="index" collection="cycleIds"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <select id="listByPlanIds" resultType="io.choerodon.test.manager.infra.dto.TestCycleDTO">
        SELECT b.*,a.caseCount
        from test_cycle b,
        (SELECT
        tc.cycle_id,
        count(tcc.execute_id)as caseCount
        FROM
        test_cycle tc
        LEFT JOIN test_cycle_case tcc ON tcc.cycle_id = tc.cycle_id
        WHERE
        tc.project_id=#{projectId}
        <if test="type != null and type != ''">
            and tc.type = #{type}
        </if>
        <if test="planIds.size>0">
            and
            tc.plan_id in
            <foreach collection="planIds" item="planId" open="(" close=")" separator=",">
                #{planId}
            </foreach>
        </if>
        GROUP BY tc.cycle_id) a
        where
        b.project_id = #{projectId} and
        a.cycle_id=b.cycle_id
        order by rank
    </select>

    <update id="fixPlanId">
        UPDATE test_cycle
        SET plan_id = #{planId}
        WHERE
            version_id = #{versionId}
    </update>

    <select id="selectVersionId" resultType="Long">
        SELECT DISTINCT version_id
        FROM `test_cycle`
    </select>

    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="cycleId">
        insert into test_cycle(cycle_name,plan_id,project_id,rank,folder_id,last_updated_by,created_by,type,from_date,to_date,version_id,parent_cycle_id)
        values
        <foreach collection="list" item="testCycle"  separator=",">
            (#{testCycle.cycleName},#{testCycle.planId},#{testCycle.projectId},#{testCycle.rank},#{testCycle.folderId},#{testCycle.lastUpdatedBy}
            ,#{testCycle.createdBy},#{testCycle.type},#{testCycle.fromDate},#{testCycle.toDate},#{testCycle.versionId},#{testCycle.parentCycleId})
        </foreach>
    </insert>

    <delete id="batchDelete">
        delete from test_cycle
        where
        cycle_id in
        <foreach collection="list" item="cycleId" open="(" close=")" separator=",">
            #{cycleId}
        </foreach>
    </delete>

    <update id="fixRank">
        <foreach collection="list" item="cycle" index="index" open="" close="" separator=";">
            update test_cycle
            set rank = #{cycle.rank}
            where cycle_id = #{cycle.cycleId}
        </foreach>
    </update>

    <select id="listByPlanIdAndProjectId" resultType="io.choerodon.test.manager.infra.dto.TestCycleDTO">
      SELECT
       cycle_id,
       cycle_name,
        CASE
            WHEN parent_cycle_id IS NOT NULL THEN
            parent_cycle_id
            WHEN parent_cycle_id IS NULL THEN
            0
            END AS parent_cycle_id,
            object_version_number,
            from_date,
            to_date,
            project_id,
            plan_id
        FROM
            test_cycle
        WHERE
            project_id = #{projectId}
        AND plan_id = #{planId}
    </select>

    <select id="selectAndOrderByIds" resultType="io.choerodon.test.manager.infra.dto.TestCycleDTO">
        SELECT
            cycle_id,
            object_version_number
        FROM test_cycle
        WHERE project_id = #{projectId}
        AND cycle_id IN
        <foreach collection="cycleIds" item="cycleId" open="(" separator="," close=")">
            #{cycleId}
        </foreach>
        ORDER BY CASE cycle_id
        <foreach collection="cycleIds" item="cycleId" index="index">
            WHEN #{cycleId} THEN #{index}
        </foreach>
        END
    </select>

    <select id="listRankIsNullCycle" resultType="io.choerodon.test.manager.infra.dto.TestCycleDTO">
        SELECT
            cycle_id,
            cycle_name,
            rank
        FROM test_cycle
        <where>
            project_id = #{projectId}
            <if test="parentCycleId != null">
             and parent_cycle_id = #{parentCycleId}
            </if>
            and rank is null
        </where>
    </select>

    <select id="countCycles" resultType="java.lang.Long">
        select
           COUNT(cycle_id)
        FROM test_cycle
        where
         project_id = #{projectId}
         and parent_cycle_id = #{parentCycleId}
         and plan_id = #{planId}
    </select>

</mapper>